const searchBox = document.querySelector(".search-page .searchBox");
const searchList = document.querySelector(".search-page .searchResults ul");
const searchForm = document.querySelector(".search-page form");

const searchInput = function(searchText, event) {
    cursorPosition = searchBox.selectionStart;
    while (searchList.firstChild) {
        searchList.removeChild(searchList.firstChild);
    }

    if (event.key != "Backspace") {
        const queryResults = queryData(searchText, Object.entries(resumeData[0]));
        if (queryResults) {
            searchBox.value = searchBox.value + queryResults[0].slice(searchBox.value.length, queryResults[0].length);
            searchBox.setSelectionRange(cursorPosition, searchBox.value.length);
            displayData(queryResults[1], searchList);
        }
    }
}

const queryData = function(searchText, node) {
    if (!Array.isArray(node[0]) && node[0].toLowerCase().startsWith(searchText)) {
        return node;
    } else {
        if (Array.isArray(node[0])){
            for (let arrayNode in node) {
                const nodeFound = queryData(searchText, node[arrayNode]);
                if (nodeFound) {
                    return nodeFound;
                }
            }
        }
        else if (typeof(node[1]) === "object" && !Array.isArray(node[1])) {
            let nodeExpanded = Object.entries(node[1]);
            return queryData(searchText, nodeExpanded);
        }
    }
}

const addListElement = function (parentList, listElementContent) {
    const listElement = document.createElement("li");
    const listBullet = document.createElement("i");
    listBullet.setAttribute("class", "fa-li fa fa-angle-right");
    listElement.appendChild(listBullet)

    const textLabel = document.createTextNode(listElementContent);
    listElement.appendChild(textLabel);

    parentList.appendChild(listElement);

    return listElement;
}

var displayData = function (objectElement, parentList) {
    if (typeof(objectElement) === "string") {
        addListElement(parentList, objectElement);
    } else {
        for (key in objectElement) {
            if (typeof(objectElement[key]) === "object" || 
                typeof(objectElement[key]) === "array") {
                const listElement = addListElement(parentList, key);
                
                const ulList = document.createElement("ul");
                ulList.setAttribute("class", "fa-ul");
                listElement.appendChild(ulList);

                displayData(objectElement[key], ulList);
            } else if (typeof(objectElement[key]) === "string") {
                addListElement(parentList, objectElement[key]);
            }
        }
    }
}

searchForm.onsubmit = function(event) {
    event.preventDefault();
}

searchBox.onkeyup = function (event) {
    if (searchBox.value != "") {
        searchInput(searchBox.value.toLowerCase(), event);
    }
}
resumeData = [{
    "Name": "Mihir Patel",
    "Contact": {
        "Phone": "513-720-9908",
        "Email": "patel3mh@mail.uc.edu"
    },
    "Education": {
        "University" : {
            "Name": "University of Cincinnati",
            "Location": "Cincinnati, Ohio",
            "Graduation year": "Class of 2021",
            "Major": "Bachelor of Science in Computer Science"
        },
        "High School": {
            "Name": "Fairfield High School",
            "Location": "Fairfield, Ohio",
            "Graduation year": "2016"
        }
    },
    "Skills": {
        "Programming": [
            "C++",
            "JavaScript (ES6)",
            "Python",
            "HTML",
            "CSS",
            "Sass",
            "PHP",
            "MATLAB"
        ],
        "Frameworks": [
            "TensorFlow",
            "Angular",
            "Drupal",
            "Bootstrap",
            "Flask",
            "PyQt",
            "Agile (SCRUM)"
        ],
        "Tools" : [
            "Amazon Web Services",
            "Docker",
            "Git",
            "Elasticsearch",
            "Gulp",
            "JQuery",
            "Adobe Creative Suite"
        ]
    },
    "Experiences": {
        "Siemens PLM Software": {
            "Title": "Software Development Co-op",
            "Location": "Milford, Ohio",
            "Dates": "Jan 2018 - Present",
            "Description": [
                "Improve data classification accuracy from 60% to 90% using TensorFlow to forge a CNN model",
                "Elevate usability by utilizing various C++ APIs to automate machine learning training",
                "Implement a search interface by querying textual data from Elasticsearch utilizing JavaScript APIs",
                "Develop AWS Lambda functions to embed JavaScript calls in an Angular web framework",
                "Responsible for utilizing Python to parse CSVs with up to 10000 entries to index into Elasticsearch",
                "Increase REST API scalability in a Docker container by creating a Python Flask REST API to handle up to 500 requests"
            ]
        },
        "University of Cincinnati": {
            "Title": "First Year Experience Peer Leader",
            "Location": "Cincinnati, Ohio",
            "Dates": "Aug 2017 - Dec 2017",
            "Description": [
                "Educated 20 students in topics across differing educational genres",
                "Created weekly lesson plans to accommodate university standards",
                "Engaged students by providing 2 interactive presentations and activities each week for 15 weeks"
            ]
        }
    }
}];